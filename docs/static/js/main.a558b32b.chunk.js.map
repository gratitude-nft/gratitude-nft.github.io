{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","Home.js","Banner.js","Ambassador.js","Slider.js","About.js","Roadmap.js","Presale.js","Provenance.js","404.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","Screen","styled","div","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","image","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledIcon","img","StyledLink","Home","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","getData","getConfig","config","useEffect","style","height","alt","src","textAlign","fontSize","fontWeight","color","target","href","length","substring","Number","fontFamily","onClick","e","preventDefault","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","Banner","id","class","Ambassador","proofValidity","setProofValidity","URIValidity","setURIValidity","checkAmbassadorValidity","setCheckAmbassadorValidity","classs","for","autocomplete","placeholder","name","onChange","newProofValidity","event","changeProofValidity","newURIValidity","changeURIValidity","newCheckAmbassadorValidity","changeCheckAmbassadorValidity","redeem","Slider","About","Roadmap","Presale","authorize","Provenance","Metadata","map","post","edition","dna","NotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a558b32b.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 12px 8px;\n  background-color: #8e50ff;\n  border-radius: 15px;\n  border: none;\n  padding: 10px;\n  font-size: 18px;\n  font-family: 'ubuntu-bold';\n  font-weight: bold;\n  color: #ffffff;\n  width: 180px;\n  cursor: pointer;\n  transition: all .3s ease;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  :hover {\n    background-color: #8248e5;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: #8e50ff;\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--accent);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  :hover {\n    background-color: #8248e5;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledIcon = styled.img`\n  width: 120px;\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: #363636;\n  text-decoration: none;\n`;\n\nfunction Home() {\n\n\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Excluding Gas Fees.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong. Refresh the page and try again.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `Success! The ${CONFIG.NFT_NAME} is now yours! Visit your OpenSea to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n\n  const decrementMintAmount = () => { \n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 5) {\n      newMintAmount = 5;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    \n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n      >\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1}>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              height: \"fit-content\"\n            }}\n          >\n            <StyledIcon alt={\"gratitudenft\"} src={\"/config/images/minting-icon.png\"} />\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: \"36px\",\n                fontWeight: \"bold\",\n                color: \"#8e50ff\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"#363636\",\n              }}\n            > \n              Our Contract Address: <br/>\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                 {truncate(CONFIG.CONTRACT_ADDRESS, 999)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"#8e50ff\", fontFamily: \"ubuntu-bold\", fontSize: \"20px\" }}\n                >\n                  1 {CONFIG.NFT_NAME} ({CONFIG.SYMBOL}) costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                </s.TextDescription>\n                \n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      Connect\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n\n                    <s.SpacerMedium />\n                    { <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container> }\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"Busy\" : \"Mint\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default Home;\n\n","import React from \"react\";\r\n\r\nfunction Banner()  {\r\n    return (\r\n        <section id = \"gnft-banner\">\r\n                <div class = \"container text-center global-top-padding\" data-aos=\"zoom-in\">\r\n                    <h1>Banner</h1>\r\n                    <p>This is for test purposes. Any design is not final and will change.</p>\r\n                </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 12px 8px;\r\n  background-color: #8e50ff;\r\n  border-radius: 15px;\r\n  border: none;\r\n  padding: 10px;\r\n  font-size: 18px;\r\n  font-family: 'ubuntu-bold';\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n  width: 180px;\r\n  cursor: pointer;\r\n  transition: all .3s ease;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n  :hover {\r\n    background-color: #8248e5;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: #8e50ff;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--accent);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n  :hover {\r\n    background-color: #8248e5;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledIcon = styled.img`\r\n  width: 120px;\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  border: 4px dashed var(--secondary);\r\n  background-color: var(--accent);\r\n  border-radius: 100%;\r\n  width: 200px;\r\n  @media (min-width: 900px) {\r\n    width: 250px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: #363636;\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction Ambassador() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Fill out the information below.`);\r\n  const [proofValidity, setProofValidity] = useState(`0x`);\r\n  const [URIValidity, setURIValidity] = useState(`https://ipfs.io/ipfs/`);\r\n  const [checkAmbassadorValidity, setCheckAmbassadorValidity] = useState(\"true\");\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  const claimNFTs = () => {\r\n    let cost = 0;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Claim Code:\", proofValidity);\r\n    console.log(\"URI Validity:\", URIValidity);\r\n    console.log(\"Ambasaddor:\", checkAmbassadorValidity)\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .redeem(URIValidity,checkAmbassadorValidity,proofValidity)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong. Please make sure that you pasted the claim code correctly.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `Success! The ${CONFIG.NFT_NAME} is now yours! Visit your OpenSea to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const changeCheckAmbassadorValidity  =  () => {{\r\n    let newCheckAmbassadorValidity = event.target.value;\r\n    setCheckAmbassadorValidity(newCheckAmbassadorValidity); \r\n  }}\r\n\r\n\r\n  const changeProofValidity  =  () => {{\r\n    let newProofValidity = event.target.value;\r\n    setProofValidity(newProofValidity);\r\n  }}\r\n\r\n  // function getMetadata(checkAmbassador, checkClaimCode) {\r\n  //   jQuery.getJSON(URIValidity, function(data) {\r\n  //     var jsonObj = data;\r\n  //     checkAmbassador = data.\r\n  //   });\r\n  // }\r\n\r\n  const changeURIValidity  =  () => {{\r\n    let newURIValidity = event.target.value;\r\n    setURIValidity(newURIValidity);\r\n    //getMetadata();\r\n  }}\r\n\r\n  const decrementMintAmount = () => { \r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 5) {\r\n      newMintAmount = 5;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen>\r\n      <s.Container\r\n        flex={1}\r\n        ai={\"center\"}\r\n      >\r\n        <s.SpacerSmall />\r\n        <ResponsiveWrapper flex={1}>\r\n          <s.SpacerLarge />\r\n          <s.Container\r\n            flex={2}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{\r\n              height: \"fit-content\"\r\n            }}\r\n          >\r\n            <StyledIcon alt={\"gratitudenft\"} src={\"/config/images/minting-icon.png\"} />\r\n            <s.TextTitle\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: \"36px\",\r\n                fontWeight: \"bold\",\r\n                color: \"#8e50ff\",\r\n              }}\r\n            >\r\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n            </s.TextTitle>\r\n            <s.TextDescription\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"#363636\",\r\n              }}\r\n            > \r\n              Our Contract Address: <br/>\r\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\r\n                 {truncate(CONFIG.CONTRACT_ADDRESS, 999)}\r\n              </StyledLink>\r\n            </s.TextDescription>\r\n            <s.SpacerSmall />\r\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  You can still find {CONFIG.NFT_NAME} on\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                  {CONFIG.MARKETPLACE}\r\n                </StyledLink>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"#8e50ff\", fontFamily: \"ubuntu-bold\", fontSize: \"20px\" }}\r\n                >\r\n                  1 {CONFIG.NFT_NAME} ({CONFIG.SYMBOL}) costs {CONFIG.DISPLAY_COST}{\" \"}\r\n                  {CONFIG.NETWORK.SYMBOL}.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                \r\n                <s.SpacerSmall />\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      Connect to the {CONFIG.NETWORK.NAME} network\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      Connect\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                          }}\r\n                        >\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      {feedback}\r\n                    </s.TextDescription>\r\n\r\n                    <div class = \"form-for-ambassador d-flex flex-column\">\r\n                    {/* Put Input for Validity Proof Starts Here */}\r\n                    <label  classs = \"mt-3 \" for = \"proof-key\">Claim Code:</label>\r\n                    <input class = \"claim-code-input\" autocomplete = \"off\" placeholder = \"Input Claim Code\" type=\"text\" id=\"proof-key\" name=\"proof-key\" onChange={(e) => {\r\n                          e.preventDefault();\r\n                          changeProofValidity();\r\n                        }}></input>\r\n                    {/* Put Input for Validity Proof Ends Here */}\r\n\r\n                    {/* Put Input for URI Proof Starts Here */}\r\n                    <label class = \"mt-3\" for = \"uri-key\">URI:</label>\r\n                    <input class = \"uri-input\" autocomplete = \"off\" placeholder = \"Input URI\" type=\"text\" id=\"uri-key\" name=\"uri-key\" onChange={(e) => {\r\n                          e.preventDefault();\r\n                          changeURIValidity();\r\n                          \r\n                        }}></input>\r\n                    {/* Put Input for URI Proof Ends Here */}\r\n\r\n                    {/* Dropdown for Ambassador Check Starts Here */}\r\n                    <label class = \"mt-3\" for = \"check-ambassador-key\">Are you an ambassador?:</label>\r\n                    <select class = \"check-ambassador-dropdown\" name=\"check-ambassador\" id=\"check-ambassador\" onChange={(e) => {\r\n                          e.preventDefault();\r\n                          changeCheckAmbassadorValidity();\r\n                        }}>\r\n                      <option value = \"true\">Yes</option>\r\n                      <option value = \"false\">No</option>\r\n                    </select>\r\n                    {/* Dropdown for Ambassador Check Ends Here */}\r\n                    </div>\r\n\r\n                    <s.SpacerMedium />\r\n\r\n                    <s.SpacerSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          claimNFTs();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {claimingNft ? \"Busy\" : \"Mint\"}\r\n                      </StyledButton>\r\n                    </s.Container>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <s.SpacerMedium />\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n        </ResponsiveWrapper>\r\n        <s.SpacerMedium />\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default Ambassador;\r\n\r\n","import React from \"react\";\r\n\r\nfunction Slider()  {\r\n    return (\r\n        <section id = \"gnft-slider\" class = \"gnft-slider text-center\">\r\n                <div class = \"collection-slider\">\r\n                    <img src=\"assets/images/gratitudenft-slider-1.png\" alt=\"GratitudeNFT\"></img>\r\n                    <img src=\"assets/images/gratitudenft-slider-2.png\" alt=\"GratitudeNFT\"></img>\r\n                    <img src=\"assets/images/gratitudenft-slider-3.png\" alt=\"GratitudeNFT\"></img>\r\n                    <img src=\"assets/images/gratitudenft-slider-4.png\" alt=\"GratitudeNFT\"></img>\r\n                    <img src=\"assets/images/gratitudenft-slider-5.png\" alt=\"GratitudeNFT\"></img>\r\n                    <img src=\"assets/images/gratitudenft-slider-6.png\" alt=\"GratitudeNFT\"></img>\r\n                    <img src=\"assets/images/gratitudenft-slider-7.png\" alt=\"GratitudeNFT\"></img>\r\n                </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Slider;","import React from \"react\";\r\n\r\nfunction About()  {\r\n    return (\r\n        <section id = \"gnft-about\" class = \"text-center\">\r\n            About\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nfunction Roadmap()  {\r\n    return (\r\n        <section id = \"gnft-roadmap\" class = \"text-center\">\r\n            Roadmap\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Roadmap;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 12px 8px;\r\n  background-color: #8e50ff;\r\n  border-radius: 15px;\r\n  border: none;\r\n  padding: 10px;\r\n  font-size: 18px;\r\n  font-family: 'ubuntu-bold';\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n  width: 180px;\r\n  cursor: pointer;\r\n  transition: all .3s ease;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n  :hover {\r\n    background-color: #8248e5;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: #8e50ff;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--accent);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n  :hover {\r\n    background-color: #8248e5;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledIcon = styled.img`\r\n  width: 120px;\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  border: 4px dashed var(--secondary);\r\n  background-color: var(--accent);\r\n  border-radius: 100%;\r\n  width: 200px;\r\n  @media (min-width: 900px) {\r\n    width: 250px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: #363636;\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction Presale() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Enter your claim code.`);\r\n  const [proofValidity, setProofValidity] = useState(`0x`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Claim Code:\", proofValidity);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .authorize(mintAmount,proofValidity)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong. Please make sure that you pasted the claim code correctly.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `Success! The ${CONFIG.NFT_NAME} is now yours! Visit your OpenSea to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n\r\n  const changeProofValidity  =  () => {{\r\n    let newProofValidity = event.target.value;\r\n    setProofValidity(newProofValidity);\r\n  }}\r\n\r\n  const decrementMintAmount = () => { \r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 5) {\r\n      newMintAmount = 5;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen>\r\n      <s.Container\r\n        flex={1}\r\n        ai={\"center\"}\r\n      >\r\n        <s.SpacerSmall />\r\n        <ResponsiveWrapper flex={1}>\r\n          <s.SpacerLarge />\r\n          <s.Container\r\n            flex={2}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{\r\n              height: \"fit-content\"\r\n            }}\r\n          >\r\n            <StyledIcon alt={\"gratitudenft\"} src={\"/config/images/minting-icon.png\"} />\r\n            <s.TextTitle\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: \"36px\",\r\n                fontWeight: \"bold\",\r\n                color: \"#8e50ff\",\r\n              }}\r\n            >\r\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n            </s.TextTitle>\r\n            <s.TextDescription\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"#363636\",\r\n              }}\r\n            > \r\n              Our Contract Address: <br/>\r\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\r\n                 {truncate(CONFIG.CONTRACT_ADDRESS, 999)}\r\n              </StyledLink>\r\n            </s.TextDescription>\r\n            <s.SpacerSmall />\r\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  You can still find {CONFIG.NFT_NAME} on\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                  {CONFIG.MARKETPLACE}\r\n                </StyledLink>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"#8e50ff\", fontFamily: \"ubuntu-bold\", fontSize: \"20px\" }}\r\n                >\r\n                  1 {CONFIG.NFT_NAME} ({CONFIG.SYMBOL}) costs {CONFIG.DISPLAY_COST}{\" \"}\r\n                  {CONFIG.NETWORK.SYMBOL}.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                \r\n                <s.SpacerSmall />\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      Connect to the {CONFIG.NETWORK.NAME} network\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      Connect\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                          }}\r\n                        >\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      {feedback}\r\n                    </s.TextDescription>\r\n\r\n                    {/* Put Input for Validity Proof Starts Here */}\r\n                      <input class = \"claim-code-input\" autocomplete = \"off\" placeholder = \"Input Claim Code\" type=\"text\" id=\"proof-key\" name=\"proof-key\" onChange={(e) => {\r\n                          e.preventDefault();\r\n                          changeProofValidity();\r\n                        }}></input>\r\n                    {/* Put Input for Validity Proof Ends Here */}\r\n\r\n                    <s.SpacerMedium />\r\n                    { <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledRoundButton\r\n                        style={{ lineHeight: 0.4 }}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          decrementMintAmount();\r\n                        }}\r\n                      >\r\n                        -\r\n                      </StyledRoundButton>\r\n                      <s.SpacerMedium />\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        {mintAmount}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <StyledRoundButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          incrementMintAmount();\r\n                        }}\r\n                      >\r\n                        +\r\n                      </StyledRoundButton>\r\n                    </s.Container> }\r\n                    <s.SpacerSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          claimNFTs();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {claimingNft ? \"Busy\" : \"Mint\"}\r\n                      </StyledButton>\r\n                    </s.Container>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <s.SpacerMedium />\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n        </ResponsiveWrapper>\r\n        <s.SpacerMedium />\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default Presale;\r\n\r\n","import React from \"react\";\r\nimport Metadata from \"./Metadata\";\r\n\r\n\r\nfunction Provenance()  {\r\n    return (\r\n        <section id = \"gnft-provenance\">\r\n            <div class = \"container\">\r\n                <div class = \"section-1 mb-5\">\r\n                    <h1>Gratitude NFT Provenance Record</h1>\r\n                    <p>This page presents the provenance record of each Gratitude NFT that will ever exist. This is the final provenance record stored on the smart contract. Here is the relevant information:</p>\r\n                    <div class = \"important-info mt-3\">\r\n                        <ul>\r\n                            <li>\r\n                                Gratitude NFT Contract Address | <a href = \"https://etherscan.io/\" target = \"_blank\">Insert Contract Address Here</a>\r\n                            </li>\r\n                            <li>\r\n                                Metadata | <a href = \"https://etherscan.io/\" target = \"_blank\">Insert Metadata Link Here</a>\r\n                            </li>\r\n                            <li>\r\n                                Provenance | QmWeGPZFsKiYLNMuuwJcWCzAfHXuMN53FtwY4Wbij8ZVHG\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class = \"section-2\">\r\n                    <h2>Provenance Record</h2>\r\n                    <p class = \"mt-2\">The table below lists the original index, assigned</p>\r\n                    <ul class = \"mt-2\">\r\n                        <li>\r\n                            Name | Edition | DNA | IPFS Hash\r\n                        </li>\r\n                    </ul>\r\n                    <table class = \"mt-2\">\r\n                        <tbody>\r\n                        {\r\n                            Metadata.map(post => {\r\n                                return (\r\n                                    <>\r\n                                    <tr>\r\n                                        <th>{post.name}</th>\r\n                                        <th>{post.edition}</th>\r\n                                        <th>{post.dna}</th>\r\n                                        <th class = \"ipfs-hash-provenance\"><a href ={post.image} target=\"_blank\">{post.image}</a></th>\r\n                                    </tr>\r\n                                    </>\r\n                                )\r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Provenance;\r\n","import React from \"react\";\r\n\r\nfunction NotFound()  {\r\n    return (\r\n        <section id = \"gnft-not-found\">\r\n            <div class = \"container\">\r\n                <div id = \"wrap-not-found\" class = \"d-flex flex-column justify-content-center align-items-center text-center\">\r\n                    <img alt=\"gratitudenft\" src=\"/config/images/minting-icon.png\" />\r\n                    <h1>404</h1>\r\n                    <h2>Page Not Found</h2>\r\n                    <p>We're sorry, the page you requested could not be found. Please go back to the homepage.</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport Home from './Home';\r\nimport Banner from './Banner';\r\nimport Ambassador from './Ambassador';\r\nimport Slider from './Slider';\r\nimport About from './About';\r\nimport Roadmap from './Roadmap';\r\nimport Presale from './Presale';\r\nimport Provenance from './Provenance';\r\nimport NotFound from './404';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nfunction App()  {\r\n    return (\r\n        <div class  = \"App\">\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Banner />\r\n                    <About />\r\n                    <Roadmap />\r\n                    <Slider />\r\n                    <Home />\r\n                </Route>\r\n                <Route exact path=\"/presale\">\r\n                    <Banner />\r\n                    <Presale />\r\n                </Route>\r\n                <Route exact path=\"/provenance\">\r\n                    <Banner />\r\n                    <Provenance />\r\n                </Route>\r\n                <Route exact path=\"/ambassador\">\r\n                    <Banner />\r\n                    <Ambassador />\r\n                </Route>\r\n                <Route>\r\n                    <NotFound />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App';\nimport Home from './Home';\nimport Presale from './Presale';\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}